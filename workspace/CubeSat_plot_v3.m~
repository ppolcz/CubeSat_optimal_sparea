%%
%  File: CubeSat_plot_v3.m
%  Directory: workspace
%  Author: Peter Polcz (ppolcz@gmail.com) 
% 
%  Created on 2020. May 01. (2019b)
% 
%%

fig = figure(3);

% First subplot
ax1 = subplot(311); hold off

% Predicted tank temperature (discrete-time)
plot(2*pi*t/P, x(:,end),'.:', 'LineWidth', 1.5, 'MarkerSize', 16), hold on

% Red vertical line at start time
plot([1 1]*2*pi*t(p1)/P, [Tt_Min Tt_Max], 'r', 'LineWidth',3);

% Red shaded region (allowed region)
shade(2*pi*ts/P, Tt_Min + 0*ts, 2*pi*ts/P, Tt_Max + 0*ts, 'FillType', [1 2;2 1]);

axis([0 2*pi*Prediction_Time/P Tt_lim]), grid on
title(sprintf('$T_{\\mathrm{T}} \\in [%d,%d]\\, \\mathrm{K}$, $\\lambda = %g$ ($\\lambda^* = %g$).', ...
    [Tt_Min Tt_Max],round(lambda,3), round(lambdaStar,3)), 'Interpreter', 'LaTeX', 'FontSize', 15)

ylabel('Tank temp. [K]','FontSize',13,'Interpreter','latex')

CubeSat_plot_v3_helper_Pk(280);

Logger.latexify_axis(15)

ax2 = subplot(312); hold off
plot(2*pi*t/P, x(:,1:6),'.-')

axis([0 2*pi*Prediction_Time/P Ts_lim]), grid on, hold on
title(sprintf('Surface temperature $T_j \\in [%d,%d]\\, \\mathrm{K}$, $j = 1, \\dots, 6$.', ...
    floor(min(min(x(:,1:6)))), ceil(max(max(x(:,1:6))))), 'Interpreter', 'LaTeX', 'FontSize', 15)

ylabel('Faces temp. [K]','FontSize',13,'Interpreter','latex')

plot([0 0 1 1 3 3 4 4 5 5 7 7 8 8 9 9]*pi/2,repmat([-2 2 2 -2],[1 4])*500,'--','Color',pcz_get_plot_colors([],2),'LineWidth',2)
plot([0 0 4 4 8 8]*pi/2,[2 -2 -2 2 2 -2]*500,'-','Color',pcz_get_plot_colors([],2),'LineWidth',2)

xticks((0:0.25:Prediction_Time/P)*2*pi);
xticklabels(labels)

Logger.latexify_axis(15)

ax3 = subplot(313); hold off
pcz_stairs(2*pi*t/P,u(:,1), 'MarkerSize', 16); hold on
axis tight, grid on

ylabel('Control input [W]','FontSize',13,'Interpreter','latex')
xlabel('Time $t$ [sec]','FontSize',13,'Interpreter','latex')

title(sprintf('Heat flux $\\dot Q_{\\mathrm{c}} \\in [%g,%g]\\, \\mathrm{W}$.', ...
    minu, maxu), 'Interpreter', 'LaTeX', 'FontSize', 15)

text(pi/4,280,'$P_1$','FontSize',15,'Interpreter','latex','horizontalalignment','center')
text(pi,280,'$P_2$','FontSize',15,'Interpreter','latex','horizontalalignment','center')
text(7*pi/4,280,'$P_3$','FontSize',15,'Interpreter','latex','horizontalalignment','center')
text(9*pi/4,280,'$P_1$','FontSize',15,'Interpreter','latex','horizontalalignment','center')
text(3*pi,280,'$P_2$','FontSize',15,'Interpreter','latex','horizontalalignment','center')
text(15*pi/4,280,'$P_3$','FontSize',15,'Interpreter','latex','horizontalalignment','center')

ax3.YLim = dQc_lim;
ax3.XLim = [0 2*pi*Prediction_Time/P];

plot([0 0 1 1 3 3 4 4 5 5 7 7 8 8 9 9]*pi/2,repmat([-2 2 2 -2],[1 4])*500,'--','Color',pcz_get_plot_colors([],2),'LineWidth',2)
plot([0 0 4 4 8 8]*pi/2,[2 -2 -2 2 2 -2]*500,'-','Color',pcz_get_plot_colors([],2),'LineWidth',2)

xticks((0:0.25:Prediction_Time/P)*2*pi);
xticklabels(labels)

Logger.latexify_axis(15)


pdfname = logger.fig_fname('pdf', modelname);
mat_fname = logger.mat_fname;

%{

% Position: [1 1 694 581]
    
print(pdfname,'-dpdf')

pcz_save(mat_fname, N, P, T, Time_for_convergence, Ts, Tt_Max, Tt_Min, ...
    dQc_Max, info, lambda, lambdaStar, lambda_lims, maxu, minu, opt, p, p1, ...
    params, resolution, t, u, x);

print(pngname,'-dpng','-r500')

%}
